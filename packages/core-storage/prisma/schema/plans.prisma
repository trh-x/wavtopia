// Basic plan structure for user storage quotas
//
// Future extensions to consider:
// - Add-on system for purchasing additional storage
// - Feature flags for premium features (e.g., download formats, stem limits)
// - Flexible pricing tiers

enum PlanTier {
  FREE
  PLUS
  PREMIUM
}

model Plan {
  id                 String    @id @default(uuid())
  tier               PlanTier  @unique
  name               String
  storageQuotaBytes  BigInt    @map("storage_quota_bytes")
  isActive           Boolean   @default(true) @map("is_active")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  userPlans          UserPlan[]

  @@map("plans")
}

model UserPlan {
  id                  String   @id @default(uuid())
  userId              String   @unique @map("user_id")
  user                User     @relation(fields: [userId], references: [id])
  planId              String   @map("plan_id")
  plan                Plan     @relation(fields: [planId], references: [id])
  currentStorageBytes BigInt   @default(0) @map("current_storage_bytes")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("user_plans")
} 